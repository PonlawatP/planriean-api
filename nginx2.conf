user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Define upstream servers with Docker service names
    upstream express_backend {
        server planriean-api-express-3:3030 weight=1 max_fails=3 fail_timeout=30s;
        server planriean-api-express-4:3030 weight=1 max_fails=3 fail_timeout=30s;
    }

    upstream elysia_backend {
        server planriean-api-elysia-6:3031 weight=1 max_fails=3 fail_timeout=30s;
        server planriean-api-elysia-7:3031 weight=1 max_fails=3 fail_timeout=30s;
        server planriean-api-elysia-8:3031 weight=1 max_fails=3 fail_timeout=30s;
        server planriean-api-elysia-9:3031 weight=1 max_fails=3 fail_timeout=30s;
        server planriean-api-elysia-10:3031 weight=1 max_fails=3 fail_timeout=30s;
    }

    upstream elysia_backend_sticky {
        ip_hash;  # <--- เพิ่มอันนี้เพื่อ stick session ตาม IP ที่เข้ามา
        
        server planriean-api-elysia-6:3031 weight=1 max_fails=3 fail_timeout=30s;
        server planriean-api-elysia-7:3031 weight=1 max_fails=3 fail_timeout=30s;
        server planriean-api-elysia-8:3031 weight=1 max_fails=3 fail_timeout=30s;
        server planriean-api-elysia-9:3031 weight=1 max_fails=3 fail_timeout=30s;
        server planriean-api-elysia-10:3031 weight=1 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        server_name _;

        # Route high-traffic course endpoint to ElysiaJS
        location ~ ^/university/[^/]+/course/[^/]+/[^/]+$ {
            
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Only route POST requests to ElysiaJS
            if ($request_method = POST) {
                proxy_pass http://elysia_backend;
            }
            
            # For other methods, use Express
            if ($request_method != POST) {
                proxy_pass http://express_backend;
            }
        }

        location /ws/planriean {
            proxy_pass http://elysia_backend_sticky;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_read_timeout 3600s;  # สำคัญมาก ถ้าไม่ใส่มันจะ timeout เอง
        }
        
        # Route everything else to Express
        location / {
            proxy_pass http://express_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
} 